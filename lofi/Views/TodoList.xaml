<UserControl x:Class="lofi.Views.TodoList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"

    xmlns:vm="clr-namespace:lofi.ViewModels"
    xmlns:b="clr-namespace:lofi.Behavior"

    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type={x:Type vm:TodoListViewModel}, IsDesignTimeCreatable=False}"
    Width="240" Height="340">


    <!-- ============= THEME-AWARE STYLES/RESOURCES ============= -->
    <UserControl.Resources>

        <!-- 체크박스(픽셀 느낌의 주황 체크) -->
        <Style x:Key="TodoItemCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Width="18" Height="18">
                            <Border CornerRadius="3"
                                    Background="#F0F2F6"
                                    BorderBrush="#8893A8"
                                    BorderThickness="1"/>
                            <Path x:Name="CheckMark" Data="M 1,9 L 6,14 L 17,2"
                                  StrokeThickness="2.2"
                                  StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                                  Stroke="#FFFD9B2E" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- 다크: TextColor == White -->
                <DataTrigger Binding="{Binding DataContext.TextColor.Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="#FFFFFFFF">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="CheckBox">
                                <Grid Width="18" Height="18">
                                    <Border CornerRadius="3"
                                            Background="#16FFFFFF"
                                            BorderBrush="#33FFFFFF"
                                            BorderThickness="1"/>
                                    <Path x:Name="CheckMark" Data="M 1,9 L 6,14 L 17,2"
                                          StrokeThickness="2.2"
                                          StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                                          Stroke="#FFFD9B2E" Visibility="Collapsed"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 완료 텍스트 -->
        <Style x:Key="CompletedTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding DataContext.TextColor, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                    <Setter Property="TextDecorations" Value="Strikethrough"/>
                    <Setter Property="Foreground" Value="#FFFD9B2E"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 입력 텍스트박스 -->
        <Style x:Key="TodoTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="28"/>
            <Setter Property="Padding" Value="6,2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="#F9FAFF"/>
            <Setter Property="BorderBrush" Value="#E3E6F0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="CaretBrush" Value="Black"/>
            <Style.Triggers>
                <!-- 다크 -->
                <DataTrigger Binding="{Binding DataContext.TextColor.Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="#FFFFFFFF">
                    <Setter Property="Background" Value="#242938"/>
                    <Setter Property="BorderBrush" Value="#3A4156"/>
                    <Setter Property="Foreground" Value="#ECECEC"/>
                    <Setter Property="CaretBrush" Value="#ECECEC"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 작은 X 아이콘 버튼 -->
        <Style x:Key="IconButton.Small" TargetType="Button">
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="bg" CornerRadius="6" Background="Transparent"/>
                            <!-- X 아이콘 -->
                            <Path x:Name="icon" StrokeThickness="1.6"
                          Data="M3,3 L13,13 M13,3 L3,13"
                          Stroke="#8A93A8" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#14000000"/>
                                <Setter TargetName="icon" Property="Stroke" Value="#D9534F"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#22000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- 다크 모드면 아이콘 톤 살짝 밝게 -->
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.TextColor.Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="#FFFFFFFF">
                    <Setter Property="Foreground" Value="#F0F0F0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 추가 버튼 -->
        <Style x:Key="AddButton" TargetType="Button">
            <Setter Property="MinWidth" Value="56"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Padding" Value="10,2"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Background" Value="#E6E9EF"/>
            <Setter Property="BorderBrush" Value="#C8CEDB"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="b" CornerRadius="6"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="b" Property="Background" Value="#F0F2F6"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="b" Property="Background" Value="#D9DDE7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- 다크 -->
                <DataTrigger Binding="{Binding DataContext.TextColor.Color, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="#FFFFFFFF">
                    <Setter Property="Foreground" Value="#F2F2F2"/>
                    <Setter Property="Background" Value="#30354A"/>
                    <Setter Property="BorderBrush" Value="#3C415A"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- 항상 투명한 리사이즈 핸들 -->
        <Style x:Key="InvisibleResizeThumb" TargetType="Thumb">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle Fill="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <!-- ============= LAYOUT (배경 이미지 제거, 단색 카드) ============= -->
    <Grid>
        <Border x:Name="Card"
                CornerRadius="14"
                Padding="14"
                SnapsToDevicePixels="True">
            <!-- 카드 스타일: 라이트/다크에 따라 배경/테두리/그림자 전환 -->
            <Border.Style>
                <Style TargetType="Border">
                    <!-- Light -->
                    <Setter Property="Background" Value="#E6F9FAFF"/>
                    <!-- 거의 불투명한 밝은 카드 -->
                    <Setter Property="BorderBrush" Value="#E3E6F0"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="18" ShadowDepth="3" Opacity="0.28"/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <!-- Dark -->
                        <DataTrigger Binding="{Binding TextColor.Color}" Value="#FFFFFFFF">
                            <Setter Property="Background" Value="#D9252A38"/>
                            <!-- 어두운 카드 -->
                            <Setter Property="BorderBrush" Value="#3A4156"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="26" ShadowDepth="2" Opacity="0.55" Color="#000000"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <!-- 컨텐츠 -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- 헤더 -->
                <Border Grid.Row="0" Background="Transparent"
                    b:DragInCanvasBehavior.IsDragGrip="True">
                    <TextBlock Text="TO-DO"
             FontSize="18" FontWeight="Bold"
             Margin="4,2,4,10"
             Foreground="{Binding TextColor}"/>
                </Border>


                <!-- 리스트 -->
                <ScrollViewer Grid.Row="1" Margin="4" VerticalScrollBarVisibility="Auto" Background="Transparent">
                    <ItemsControl ItemsSource="{Binding TodoItems}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <CheckBox Grid.Column="0"
                                    VerticalAlignment="Center"
                                    IsChecked="{Binding IsCompleted, Mode=TwoWay}"
                                    Style="{StaticResource TodoItemCheckBoxStyle}"/>


                                    <TextBlock Grid.Column="1"
                                               Margin="8,0,6,0"
                                               Text="{Binding Content}"
                                               FontSize="14"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource CompletedTextStyle}"/>
                                    <Button Grid.Column="2" Margin="8,0,0,0"
                                                Style="{StaticResource IconButton.Small}"
                                                ToolTip="삭제"
                                                Command="{Binding DataContext.RemoveTodoCommand,
                                                                  RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}"/>

                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>

                <!-- 입력 -->
                <Grid Grid.Row="2" Margin="4,10,4,2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>

                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0"
                        Margin="0,0,8,0"
                        Style="{StaticResource Input.TextBox.Rounded}"
                        Text="{Binding NewTodoText, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding AddTodoCommand}"/>
                                    </TextBox.InputBindings>
                                </TextBox>

                    <Button Grid.Column="1"
                        Content="추가"
                        Style="{StaticResource Button.Primary.Rounded}"
                        Command="{Binding AddTodoCommand}"/>

                </Grid>
            </Grid>
            <!-- 컨텐츠 Grid 끝 -->
        </Border>
        <!-- Card 끝 -->

        <!-- 카드 전체를 덮는 리사이즈 오버레이 -->
        <Border CornerRadius="14" Background="{x:Null}" ClipToBounds="True" SnapsToDevicePixels="True">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="True">
                <!-- 변 -->
                <Thumb Style="{StaticResource InvisibleResizeThumb}" Width="6"  HorizontalAlignment="Left"   Cursor="SizeWE"
           DragDelta="ResizeLeft_OnDragDelta"/>
                <Thumb Style="{StaticResource InvisibleResizeThumb}" Width="6"  HorizontalAlignment="Right"  Cursor="SizeWE"
           DragDelta="ResizeRight_OnDragDelta"/>
                <Thumb Style="{StaticResource InvisibleResizeThumb}" Height="6" VerticalAlignment="Top"      Cursor="SizeNS"
           DragDelta="ResizeTop_OnDragDelta"/>
                <Thumb Style="{StaticResource InvisibleResizeThumb}" Height="6" VerticalAlignment="Bottom"   Cursor="SizeNS"
           DragDelta="ResizeBottom_OnDragDelta"/>

                <!-- 코너 -->
                <Thumb Style="{StaticResource InvisibleResizeThumb}" Width="12" Height="12"
           HorizontalAlignment="Left"  VerticalAlignment="Top"
           Cursor="SizeNWSE" DragDelta="ResizeTopLeft_OnDragDelta"/>
                <Thumb Style="{StaticResource InvisibleResizeThumb}" Width="12" Height="12"
           HorizontalAlignment="Right" VerticalAlignment="Top"
           Cursor="SizeNESW" DragDelta="ResizeTopRight_OnDragDelta"/>
                <Thumb Style="{StaticResource InvisibleResizeThumb}" Width="12" Height="12"
           HorizontalAlignment="Left"  VerticalAlignment="Bottom"
           Cursor="SizeNESW" DragDelta="ResizeBottomLeft_OnDragDelta"/>
                <Thumb Style="{StaticResource InvisibleResizeThumb}" Width="12" Height="12"
           HorizontalAlignment="Right" VerticalAlignment="Bottom"
           Cursor="SizeNWSE" DragDelta="ResizeBottomRight_OnDragDelta"/>
            </Grid>
        </Border>
    </Grid>
    <!-- 최상위 Grid 닫기 -->
</UserControl>
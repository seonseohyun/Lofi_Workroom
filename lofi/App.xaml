<Application x:Class="lofi.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <!-- share card container -->
            <Style x:Key="Card.Container" TargetType="Border">
                <!-- Light -->
                <Setter Property="Background" Value="#E6F9FAFF"/>
                <Setter Property="BorderBrush" Value="#E3E6F0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="14"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="18" ShadowDepth="3" Opacity="0.28"/>
                    </Setter.Value>
                </Setter>
                <!-- Dark: Window.DataContext.TodoListViewModel.TextColor == White -->
                <Style.Triggers>
                    <DataTrigger
            Binding="{Binding DataContext.TodoListViewModel.TextColor.Color,
                              RelativeSource={RelativeSource AncestorType=Window}}"
            Value="#FFFFFFFF">
                        <Setter Property="Background" Value="#D9252A38"/>
                        <Setter Property="BorderBrush" Value="#3A4156"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="26" ShadowDepth="2" Opacity="0.55" Color="#000000"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- share input textbox -->
            <Style x:Key="Input.TextBox.Rounded" TargetType="TextBox">
                <Setter Property="Height" Value="28"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="#F9FAFF"/>
                <Setter Property="BorderBrush" Value="#E3E6F0"/>
                <Setter Property="CaretBrush" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="bd" CornerRadius="8"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bd" Property="Background" Value="#FFFDFEFF"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="bd" Property="BorderBrush" Value="#FFFD9B2E"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!-- Dark -->
                <Style.Triggers>
                    <DataTrigger
            Binding="{Binding DataContext.TodoListViewModel.TextColor.Color,
                              RelativeSource={RelativeSource AncestorType=Window}}"
            Value="#FFFFFFFF">
                        <Setter Property="Foreground" Value="#ECECEC"/>
                        <Setter Property="Background" Value="#242938"/>
                        <Setter Property="BorderBrush" Value="#3A4156"/>
                        <Setter Property="CaretBrush" Value="#ECECEC"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="Button.Icon.Ghost" TargetType="Button">
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>

                                <Ellipse x:Name="ring" Stroke="#81A1C1" StrokeThickness="1.2" Opacity="0"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ring" Property="Opacity" Value="0.12"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ring" Property="Opacity" Value="0.22"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--share basic round Btn -->
            <Style x:Key="Button.Primary.Rounded" TargetType="Button">
                <Setter Property="MinWidth" Value="56"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Padding" Value="12,2"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Foreground" Value="#333333"/>
                <Setter Property="Background" Value="#E6E9EF"/>
                <Setter Property="BorderBrush" Value="#C8CEDB"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="b" CornerRadius="8"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="b" Property="Background" Value="#F0F2F6"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="b" Property="Background" Value="#D9DDE7"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="b" Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!-- Dark -->
                <Style.Triggers>
                    <DataTrigger
            Binding="{Binding DataContext.TodoListViewModel.TextColor.Color,
                              RelativeSource={RelativeSource AncestorType=Window}}"
            Value="#FFFFFFFF">
                        <Setter Property="Foreground" Value="#F2F2F2"/>
                        <Setter Property="Background" Value="#30354A"/>
                        <Setter Property="BorderBrush" Value="#3C415A"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- togglebtn -->
            <Style x:Key="ToggleButtonStyle" TargetType="Button" BasedOn="{StaticResource Button.Primary.Rounded}">
                <Setter Property="Width" Value="56"/>
                <Setter Property="Height" Value="56"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="#33FFFFFF"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="b" CornerRadius="28"
                      Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="b" Property="Background" Value="#55FFFFFF"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="b" Property="Background" Value="#77FFFFFF"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="b" Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!-- Dark -->
                <Style.Triggers>
                    <DataTrigger
            Binding="{Binding DataContext.TodoListViewModel.TextColor.Color,
                              RelativeSource={RelativeSource AncestorType=Window}}"
            Value="#FFFFFFFF">
                        <Setter Property="Background" Value="#331A1E2B"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="b" CornerRadius="28"
                          Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="b" Property="Background" Value="#4D1A1E2B"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="b" Property="Background" Value="#661A1E2B"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="b" Property="Opacity" Value="0.6"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- mini_slider -->
            <Style x:Key="Slider.Mini" TargetType="Slider">
                <Setter Property="Height" Value="18"/>
                <Setter Property="Margin" Value="0,6,0,6"/>
                <!--///////// -->
            </Style>

            <!-- transparent resize handle -->
            <Style x:Key="InvisibleResizeThumb" TargetType="Thumb">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Thumb">
                            <Rectangle Fill="{TemplateBinding Background}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
